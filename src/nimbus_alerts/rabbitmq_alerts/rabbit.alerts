ALERT RabbitMQServerDown
  IF min(rabbitmq_up) by(instance) != 1
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "major",
    monitored_item = `{{$labels.bosh_deployment}}/{{$labels.bosh_job_name}}`,
    spark = "true",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` is down",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has been down the last 5m",
  }

ALERT SCMSRabbitMQMemAlarnCallout
  IF rabbitmq_node_mem_alarm != 0
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "scms_callout",
    monitored_item = `{{$labels.bosh_job_name}}`,
    spark = "true",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` has locked",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has locked due to high memory",
  }

ALERT RabbitMQMemAlarn
  IF rabbitmq_node_mem_alarm != 0
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "major",
    monitored_item = `{{$labels.bosh_job_name}}`,
    spark = "true",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` has locked",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has locked due to high memory",
  }

ALERT SCMSRabbitMQMemAlarnSlack
  IF rabbitmq_node_mem_alarm != 0
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "scms",
    monitored_item = `{{$labels.bosh_job_name}}`,
    spark = "false",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` has locked",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has locked due to high memory",
  }

ALERT SCMSRabbitMQMemHighCallout
  IF rabbitmq_node_mem_limit * 0.3 - rabbitmq_node_mem_used < 0
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "scms_callout",
    monitored_item = `{{$labels.bosh_deployment}}/{{$labels.bosh_job_name}}`,
    spark = "true",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` is down",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has high memory for the last 5m",
  }


ALERT RabbitMQMemoryHighCallout
  IF rabbitmq_node_mem_limit * 0.3 - rabbitmq_node_mem_used < 0
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "major",
    monitored_item = `{{$labels.bosh_job_name}}`,
    spark = "true",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` has high Memory: {{$value}}",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has high CPU - {{$value}}",
  }


ALERT SCMSRabbitMQMemoryHighSlack
  IF rabbitmq_node_mem_limit * 0.3 - rabbitmq_node_mem_used < 0
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "scms",
    monitored_item = `{{$labels.bosh_deployment}}/{{$labels.bosh_job_name}}`,
    spark = "false",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` is down",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has high memory for the last 5m",
  }


ALERT SCMSRabbitMQCPUHigh
  IF bosh_job_load_avg05{bosh_deployment="rabbitmq"} > 5
  FOR 5m
  LABELS {
    service = "rabbitmq",
    severity = "scms",
    monitored_item = `{{$labels.bosh_job_name}}`,
    spark = "false",
  }
  ANNOTATIONS {
    summary = "Rabbitmq Server instance `{{$labels.instance}}` has high CPU: {{$value}}",
    description = "The RabbitMQ Server instance at `{{$labels.instance}}` has high CPU - {{$value}}",
  }  

